#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
–ó–∞–ø—É—Å–∫–∞–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""
import os
import sys
import subprocess
import time
import signal

def run_migrations():
    """–ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π Alembic"""
    print("üîÑ Starting database migrations...")
    
    try:
        # –ñ–¥–µ–º, –ø–æ–∫–∞ PostgreSQL –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤
        print("‚è≥ Waiting for PostgreSQL to be ready...")
        time.sleep(5)  # –î–∞–µ–º –≤—Ä–µ–º—è PostgreSQL –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è
        
        # –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π
        result = subprocess.run([
            sys.executable, "-m", "alembic", "upgrade", "head"
        ], capture_output=True, text=True, check=True)
        
        print("‚úÖ Migrations completed successfully!")
        if result.stdout:
            print("Output:", result.stdout)
        return True
        
    except subprocess.CalledProcessError as e:
        print("‚ùå Migration failed!")
        print(f"Error: {e}")
        if e.stderr:
            print(f"Error output: {e.stderr}")
        if e.stdout:
            print(f"Standard output: {e.stdout}")
        return False
    except Exception as e:
        print(f"‚ùå Unexpected error during migration: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ Starting application initialization...")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
    if run_migrations():
        print("‚úÖ Initialization completed successfully!")
        print("üöÄ Starting Flask application...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        os.execv(sys.executable, [sys.executable, "app.py"])
    else:
        print("‚ùå Initialization failed!")
        sys.exit(1)

if __name__ == "__main__":
    main() 